{"version":3,"sources":["cgu_hello.js","cgu_multiButton.js","login_button.js","lock.js","App.js","reportWebVitals.js","index.js"],"names":["styleArgument","fontSize","color","marginTop","HelloCGU","style","makeStyles","theme","root","margin","spacing","width","useStyles","height","BasicTextFields","classes","className","noValidate","autoComplete","TextField","id","label","withStyles","green","checked","props","Checkbox","CheckboxLabels","React","useState","checkedB","checkedA","state","setState","FormGroup","row","FormControlLabel","control","onChange","event","target","name","App","Grid","container","minHeight","item","xs","sm","src","objectFit","alt","alignItems","direction","justify","padding","display","flexDirection","maxHeight","maxWidth","Lock","Button","variant","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAAMA,EAAgB,CAAEC,SAAU,OAAQC,MAAO,QAAQC,UAAU,OAIpDC,EAHA,WACd,OAAO,oBAAIC,MAAUL,EAAd,yC,kBCGUM,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPC,OAAQF,EAAMG,QAAQ,IACtBC,MAAO,c,aCJPC,EAAYN,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACLC,OAAQF,EAAMG,QAAQ,GACtBC,MAAO,OACPE,OAAQ,aAKD,SAASC,IACtB,IAAMC,EAAUH,IACd,OACA,uBAAMI,UAAWD,EAAQP,KAAMS,YAAU,EAACC,aAAa,MAAvD,UACE,cAACC,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,MAAM,kBACrC,uBACA,cAACF,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,MAAM,gB,+ECVrBC,YAAW,CAC/Bd,KAAM,CACJN,MAAOqB,IAAM,KACb,YAAa,CACXrB,MAAOqB,IAAM,OAGjBC,QAAS,IAPWF,EAQnB,SAACG,GAAD,OAAW,cAACC,EAAA,EAAD,aAAUxB,MAAM,WAAcuB,OAE7B,SAASE,IACtB,MAA0BC,IAAMC,SAAS,CACvCC,UAAU,EACVC,UAAU,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAUA,OACE,cAACC,EAAA,EAAD,CAAWC,KAAG,EAAd,SACE,cAACC,EAAA,EAAD,CACEC,QACE,cAACX,EAAA,EAAD,CACEF,QAASQ,EAAMF,SACfQ,SAVW,SAACC,GACpBN,EAAS,2BAAKD,GAAN,kBAAcO,EAAMC,OAAOC,KAAOF,EAAMC,OAAOhB,YAU/CiB,KAAK,WACLvC,MAAM,YAGVmB,MAAM,iB,MCKCqB,MAtCf,WACE,OACE,qBAAK1B,UAAU,MAAf,SACI,eAAC2B,EAAA,EAAD,CAAMC,WAAS,EAACvC,MAAO,CAACwC,UAAW,SAAnC,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACE,qBACEC,IAAI,qFACJ5C,MAAO,CAACM,MAAM,OAAQE,OAAO,OAAQqC,UAAU,SAC/CC,IAAI,UAGR,cAACR,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIC,GAAI,EACjCI,WAAW,SAASC,UAAU,SAAUC,QAAQ,gBAChDjD,MAAO,CAACkD,QAAQ,IAFhB,SAGE,qBAAKlD,MAAO,CAACmD,QAAQ,OAAOC,cAAc,SAASC,UAAU,IAAIC,SAAS,KAA1E,SACE,eAAChB,EAAA,EAAD,CAAMC,WAAS,EAACU,QAAQ,SAAxB,UACA,qBAAKjD,MAAO,CAACF,UAAU,OACpBC,IACD,qBAAKC,MAAO,CAACQ,OAAO,OACjBC,IACH,qBAAKT,MAAO,CAACQ,OAAO,MACnB+C,IACD,uBACA,qBAAKvD,MAAO,CAACQ,OAAO,OACpB,cAACgD,EAAA,EAAD,+BACA,cAACA,EAAA,EAAD,CAAQ3D,MAAM,UAAU4D,QAAQ,YAAYzD,MAAO,CAACM,MAAM,IAAIE,OAAO,GAAGV,UAAU,IAAlF,8BCvBD4D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.87b73499.chunk.js","sourcesContent":["const styleArgument = { fontSize: '50px', color: 'black',marginTop:'800'};\r\nconst HelloCGU=()=>{\r\n return <h1 style = { styleArgument } > 登入介面 </h1>;\r\n}\r\nexport default HelloCGU;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(10),\r\n      width: '100ch'\r\n    },\r\n  },\r\n}));\r\nexport default function DisableElevation() {\r\n  return (\r\n    <Button variant=\"contained\" color=\"primary\" disableElevation>\r\n      Login\r\n    </Button>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Height } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '40ch',\r\n        height: '10ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function BasicTextFields() {\r\n  const classes = useStyles();\r\n    return (\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <TextField id=\"standard-basic\" label=\"Email Address\" />\r\n      <br></br>\r\n      <TextField id=\"standard-basic\" label=\"Password\" />\r\n    </form>\r\n  );\r\n}","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\n\r\nconst GreenCheckbox = withStyles({\r\n  root: {\r\n    color: green[400],\r\n    '&$checked': {\r\n      color: green[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nexport default function CheckboxLabels() {\r\n  const [state, setState] = React.useState({\r\n    checkedB: true,\r\n    checkedA: true,\r\n\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <FormGroup row>\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={state.checkedB}\r\n            onChange={handleChange}\r\n            name=\"checkedB\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"Remeber me\"\r\n      />\r\n    </FormGroup>\r\n  );\r\n}","import HelloCGU from './cgu_hello'\nimport MultiButton from './cgu_multiButton'\nimport BasicTextFields from './login_button'\nimport Link from '@material-ui/core/Link';\nimport {Grid, TextField} from \"@material-ui/core\"\nimport Lock from \"./lock\"\nimport Button from '@material-ui/core/Button';\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Grid container style={{minHeight: '100vh'}}>\n          <Grid item xs={1} sm={6}>\n            <img \n              src=\"https://i0.zi.org.tw/kocpc/2021/01/1611477294-5830d062501eb5a2b777dade755489e2.jpg\" \n              style={{width:\"100%\", height:\"100%\", objectFit:\"cover\"}} \n              alt=\"img\" \n            />\n          </Grid>\n          <Grid container item xs={12} sm={6} \n          alignItems=\"center\" direction=\"column\"  justify=\"space-between\"\n          style={{padding:10}}>\n            <div style={{display:\"flex\",flexDirection:\"column\",maxHeight:400,maxWidth:300}}>\n              <Grid container justify=\"center\">\n              <div style={{marginTop:200}}></div>\n                {HelloCGU()}\n                <div style={{height:200}}></div>\n                  {BasicTextFields()} \n                <div style={{height:10}}></div>\n                {Lock()}\n                <br></br>\n                <div style={{height:100}}></div>\n                <Button>Forget password?</Button>\n                <Button color=\"primary\" variant=\"contained\" style={{width:900,height:40,marginTop:20}}>\n                  log\n                </Button>\n              </Grid>\n            </div>\n      \n          </Grid>\n        </Grid>\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}